// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tourism.Infrastructure;

#nullable disable

namespace Tourism.Infrastructure.Migrations
{
    [DbContext(typeof(TourismDbContext))]
    partial class TourismDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Toursim.Domain.Entities.Fikr", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("foydalanunchiId")
                        .HasColumnType("int")
                        .HasColumnName("foydalanuvchiId");

                    b.Property<string>("foydalanuvchiFikr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("foydalanuvchiFikr");

                    b.HasKey("id");

                    b.ToTable("Fikr", "dbo");
                });

            modelBuilder.Entity("Toursim.Domain.Entities.Foydalanuvchi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("condition")
                        .HasColumnType("int")
                        .HasColumnName("condition");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("familiya")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("familiya");

                    b.Property<string>("ism")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ism");

                    b.Property<string>("parol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("parol");

                    b.Property<int>("role")
                        .HasColumnType("int")
                        .HasColumnName("role");

                    b.Property<string>("telNomer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telNomer");

                    b.HasKey("id");

                    b.ToTable("Foydalanuvchi", "dbo");
                });

            modelBuilder.Entity("Toursim.Domain.Entities.FoydalanuvchiVaShahar", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("foydalanuvchiId")
                        .HasColumnType("int")
                        .HasColumnName("foydalanuvchiId");

                    b.Property<int>("shaharId")
                        .HasColumnType("int")
                        .HasColumnName("shaharId");

                    b.HasKey("id");

                    b.HasIndex("foydalanuvchiId");

                    b.HasIndex("shaharId");

                    b.ToTable("FoydalanuvchiVaShahar", "dbo");
                });

            modelBuilder.Entity("Toursim.Domain.Entities.Shahar", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nomi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nomi");

                    b.Property<string>("rasm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("rasm");

                    b.HasKey("id");

                    b.ToTable("Shahar", "dbo");
                });

            modelBuilder.Entity("Toursim.Domain.Entities.Tolov", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("foydalanuvchiId")
                        .HasColumnType("int")
                        .HasColumnName("foydalanuvchiId");

                    b.Property<double>("tolovQiymati")
                        .HasColumnType("float")
                        .HasColumnName("tolovQiymati");

                    b.HasKey("id");

                    b.ToTable("Tolov", "dbo");
                });

            modelBuilder.Entity("Toursim.Domain.Entities.Xizmatlar", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("boshlanishVaqti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("boshlanishVaqti");

                    b.Property<string>("haqida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("haqida");

                    b.Property<string>("kun")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("kun");

                    b.Property<int>("narxi")
                        .HasColumnType("int")
                        .HasColumnName("narxi");

                    b.Property<string>("nomi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nomi");

                    b.Property<string>("rasm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("rasm");

                    b.Property<int>("shaharId")
                        .HasColumnType("int")
                        .HasColumnName("shaharId");

                    b.Property<string>("tugashVaqti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tugashVaqti");

                    b.HasKey("id");

                    b.HasIndex("shaharId");

                    b.ToTable("Xizmatlar", "dbo");
                });

            modelBuilder.Entity("Toursim.Domain.Entities.FoydalanuvchiVaShahar", b =>
                {
                    b.HasOne("Toursim.Domain.Entities.Foydalanuvchi", "foydalanuvchi")
                        .WithMany("foydalanuvchiVaShaharlar")
                        .HasForeignKey("foydalanuvchiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Toursim.Domain.Entities.Shahar", "shahar")
                        .WithMany("foydalanuvchiVaShaharlar")
                        .HasForeignKey("shaharId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("foydalanuvchi");

                    b.Navigation("shahar");
                });

            modelBuilder.Entity("Toursim.Domain.Entities.Xizmatlar", b =>
                {
                    b.HasOne("Toursim.Domain.Entities.Shahar", "shahar")
                        .WithMany("xizmatlar")
                        .HasForeignKey("shaharId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("shahar");
                });

            modelBuilder.Entity("Toursim.Domain.Entities.Foydalanuvchi", b =>
                {
                    b.Navigation("foydalanuvchiVaShaharlar");
                });

            modelBuilder.Entity("Toursim.Domain.Entities.Shahar", b =>
                {
                    b.Navigation("foydalanuvchiVaShaharlar");

                    b.Navigation("xizmatlar");
                });
#pragma warning restore 612, 618
        }
    }
}
